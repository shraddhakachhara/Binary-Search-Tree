// naukri.com
void inorder(TreeNode* root, vector<int>& v){
    if(root==NULL){
        return ;
    }
    inorder(root->left,v);
    v.push_back(root->data);
    inorder(root->right,v);
}

vector<int> mergeBST(TreeNode *root1, TreeNode *root2)
{
    vector<int> ans;
    vector<int> ans1;
    vector<int> ans2;
    inorder(root1,ans1);
    inorder(root2,ans2);
    int i=0;
    int j=0;
    while(i<ans1.size() && j<ans2.size()){
        if(ans1[i]<ans2[j]){
            ans.push_back(ans1[i++]);
        }
        else{
            ans.push_back(ans2[j++]);
        }
    }
    while(i<ans1.size()){
        ans.push_back(ans1[i++]);
    }
    while(j<ans2.size()){
        ans.push_back(ans2[j++]);
    }
    return ans;
}
